{"version":3,"file":"static/js/251.1731aa37.chunk.js","mappings":"6PAEaA,EAASC,EAAAA,GAAAA,OAAH,+VAgBNC,EAAQD,EAAAA,GAAAA,MAAH,iXAkBLE,GAAaF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,wQAaVI,EAAaJ,EAAAA,GAAAA,EAAH,4C,SCKvB,EA9Ce,WACb,OAA4BK,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SACzBC,GAAWC,EAAAA,EAAAA,MAoBjB,OAXAC,EAAAA,EAAAA,YAAU,WACM,KAAVJ,GAA0B,OAAVA,GAGpBK,EAAAA,EAAAA,IAAA,0DAEuDL,EAFvD,wFAIGM,MAAK,SAAAC,GAAG,OAAIX,EAAUW,EAAIC,KAAKC,QAAvB,GACZ,GAAE,CAACT,KAGF,iCACE,kBAAMU,SApBW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACff,EAAgB,CAAEC,MAAOa,EAAKE,SAASf,MAAMgB,QAC7CH,EAAKI,OACN,EAeG,WACE,SAAC3B,EAAD,CAAO4B,KAAK,OAAOC,KAAK,WACxB,SAAC/B,EAAD,CAAQ8B,KAAK,OAAb,SAAoB,eAEtB,+BACGvB,QADH,IACGA,OADH,EACGA,EAAQyB,KAAI,SAAAC,GAAK,OAChB,yBACE,SAAC9B,EAAD,CAAY+B,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMvB,GAAtD,UACE,SAACT,EAAD,UAAa4B,EAAMK,WAFdL,EAAME,GADC,OAQpB,SAAC,EAAAI,SAAD,CAAUC,UAAU,yBAAK,eAAzB,UACE,SAAC,KAAD,QAIP,C","sources":["Pages/Movies/Movies.styled.js","Pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nexport const Button = styled.button`\n  background-color: aquamarine;\n  border: none; /* Green */\n  border-radius: 5px;\n  color: black;\n  padding: 10px 20px;\n  text-align: center;\n  display: inline-block;\n  font-size: 16px;\n  font-weight: 900;\n  &:hover {\n    box-shadow: 0 12px 16px 0 rgba(0, 0, 0, 0.24),\n      0 17px 50px 0 rgba(0, 0, 0, 0.19);\n  }\n`;\n\nexport const Input = styled.input`\n  width: 400px;\n  height: 30px;\n  padding: 5px;\n  margin-right: 20px;\n  cursor: pointer;\n  background-color: aquamarine;\n  border-radius: 5px;\n  outline: 2px solid lightgrey;\n  &:hover {\n    box-shadow: 0 12px 16px 0 rgba(0, 0, 0, 0.24),\n      0 17px 50px 0 rgba(0, 0, 0, 0.19);\n  }\n  &:checked {\n    background-color: white;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  font-size: 15px;\n  font-weight: 700;\n  text-decoration: none;\n  color: black;\n  display: inline-block;\n  &:hover {\n    box-shadow: 0 12px 16px 0 rgba(0, 0, 0, 0.24),\n      0 17px 50px 0 rgba(0, 0, 0, 0.19);\n    color: blue;\n  }\n`;\n\nexport const MovieTitle = styled.p`\n  margin: 5px 0px;\n`;\n","// import { SingleMovie } from 'Pages/MovieDetails/MovieDetails';\nimport axios from 'axios';\nimport React, { Suspense, useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Outlet } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { Button, Input, StyledLink, MovieTitle } from './Movies.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const location = useLocation();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    setSearchParams({ query: form.elements.query.value });\n    form.reset();\n  };\n\n  useEffect(() => {\n    if (query === '' || query === null) {\n      return;\n    }\n    axios\n      .get(\n        `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1&api_key=ca0bc941de48c2ff206be5206128b701`\n      )\n      .then(res => setMovies(res.data.results));\n  }, [query]);\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <Input type=\"text\" name=\"query\"></Input>\n        <Button type=\"text\">Search</Button>\n      </form>\n      <ul>\n        {movies?.map(movie => (\n          <li key={movie.id}>\n            <StyledLink to={`/movies/${movie.id}`} state={{ from: location }}>\n              <MovieTitle>{movie.title}</MovieTitle>\n            </StyledLink>\n          </li>\n        ))}\n      </ul>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["Button","styled","Input","StyledLink","Link","MovieTitle","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","query","get","location","useLocation","useEffect","axios","then","res","data","results","onSubmit","e","preventDefault","form","currentTarget","elements","value","reset","type","name","map","movie","to","id","state","from","title","Suspense","fallback"],"sourceRoot":""}