{"version":3,"file":"static/js/251.89c32011.chunk.js","mappings":"+QAEaA,EAASC,EAAAA,GAAAA,OAAH,+VAgBNC,EAAQD,EAAAA,GAAAA,MAAH,iXAkBLE,GAAaF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,wQAaVI,EAAaJ,EAAAA,GAAAA,EAAH,4C,kBCWvB,EArDe,WACb,OAA4BK,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SACzBC,GAAWC,EAAAA,EAAAA,MA2BjB,OAfAC,EAAAA,EAAAA,YAAU,WACR,GAAc,KAAVJ,GAA0B,OAAVA,EAApB,CAGA,IAAMK,EAAU,mCAAG,8GAEMC,EAAAA,EAAAA,IAASN,GAFf,OAETL,EAFS,OAGfC,EAAUD,GAHK,gDAKfY,QAAQC,IAAR,MALe,yDAAH,qDAQhBH,GATC,CAUF,GAAE,CAACL,KAGF,iCACE,kBAAMS,SA3BW,SAAAC,GAEnB,GADAA,EAAEC,iBACkC,KAAhCD,EAAEE,cAAcZ,MAAMa,MAA1B,CAGA,IAAMC,EAAOJ,EAAEE,cACfb,EAAgB,CAAEC,MAAOc,EAAKC,SAASf,MAAMa,QAC7CC,EAAKE,OAHJ,CAIF,EAmBG,WACE,SAAC1B,EAAD,CAAO2B,KAAK,OAAOC,KAAK,WACxB,SAAC9B,EAAD,CAAQ6B,KAAK,OAAb,SAAoB,eAEtB,+BACGtB,QADH,IACGA,OADH,EACGA,EAAQwB,KAAI,SAAAC,GAAK,OAChB,yBACE,SAAC7B,EAAD,CAAY8B,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMtB,GAAtD,UACE,SAACT,EAAD,UAAa2B,EAAMK,WAFdL,EAAME,GADC,OAQpB,SAAC,EAAAI,SAAD,CAAUC,UAAU,yBAAK,eAAzB,UACE,SAAC,KAAD,QAIP,C","sources":["Pages/Movies/Movies.styled.js","Pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nexport const Button = styled.button`\n  background-color: aquamarine;\n  border: none; /* Green */\n  border-radius: 5px;\n  color: black;\n  padding: 10px 20px;\n  text-align: center;\n  display: inline-block;\n  font-size: 16px;\n  font-weight: 900;\n  &:hover {\n    box-shadow: 0 12px 16px 0 rgba(0, 0, 0, 0.24),\n      0 17px 50px 0 rgba(0, 0, 0, 0.19);\n  }\n`;\n\nexport const Input = styled.input`\n  width: 400px;\n  height: 30px;\n  padding: 5px;\n  margin-right: 20px;\n  cursor: pointer;\n  background-color: aquamarine;\n  border-radius: 5px;\n  outline: 2px solid lightgrey;\n  &:hover {\n    box-shadow: 0 12px 16px 0 rgba(0, 0, 0, 0.24),\n      0 17px 50px 0 rgba(0, 0, 0, 0.19);\n  }\n  &:checked {\n    background-color: white;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  font-size: 15px;\n  font-weight: 700;\n  text-decoration: none;\n  color: black;\n  display: inline-block;\n  &:hover {\n    box-shadow: 0 12px 16px 0 rgba(0, 0, 0, 0.24),\n      0 17px 50px 0 rgba(0, 0, 0, 0.19);\n    color: blue;\n  }\n`;\n\nexport const MovieTitle = styled.p`\n  margin: 5px 0px;\n`;\n","import React, { Suspense, useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Outlet } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { Button, Input, StyledLink, MovieTitle } from './Movies.styled';\nimport { getQuery } from '../../services/Api';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const location = useLocation();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (e.currentTarget.query.value === '') {\n      return;\n    }\n    const form = e.currentTarget;\n    setSearchParams({ query: form.elements.query.value });\n    form.reset();\n  };\n\n  useEffect(() => {\n    if (query === '' || query === null) {\n      return;\n    }\n    const fetchQuery = async () => {\n      try {\n        const movies = await getQuery(query);\n        setMovies(movies);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchQuery();\n  }, [query]);\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <Input type=\"text\" name=\"query\"></Input>\n        <Button type=\"text\">Search</Button>\n      </form>\n      <ul>\n        {movies?.map(movie => (\n          <li key={movie.id}>\n            <StyledLink to={`/movies/${movie.id}`} state={{ from: location }}>\n              <MovieTitle>{movie.title}</MovieTitle>\n            </StyledLink>\n          </li>\n        ))}\n      </ul>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["Button","styled","Input","StyledLink","Link","MovieTitle","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","query","get","location","useLocation","useEffect","fetchQuery","getQuery","console","log","onSubmit","e","preventDefault","currentTarget","value","form","elements","reset","type","name","map","movie","to","id","state","from","title","Suspense","fallback"],"sourceRoot":""}